---
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: monitoring
spec:
  version: 8.16.1
  monitoring:
    metrics:
      elasticsearchRefs:
        - name: monitoring
    logs:
      elasticsearchRefs:
        - name: monitoring
  nodeSets:
    - name: default
      count: 1
      podTemplate:
        spec:
          initContainers:
            - name: sysctl
              securityContext:
                privileged: true
                runAsUser: 0
              command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
          containers:
            - name: elasticsearch
              resources:
                requests:
                  cpu: 1
                  memory: 2Gi
                limits:
                  memory: 2Gi
      volumeClaimTemplates:
        - metadata:
            name: elasticsearch-data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 30Gi
            storageClassName: managed-csi-premium
---
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: monitoring
spec:
  version: 8.16.1
  count: 1
  elasticsearchRef:
    name: monitoring
  podTemplate:
    spec:
      containers:
        - name: kibana
          resources:
            requests:
              cpu: 1
              memory: 1Gi
            limits:
              memory: 1Gi
  config:
    server.publicBaseUrl: "https://monitoring.{{ .Values.external_hostname_suffix }}"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kibana
  annotations:
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "https"
spec:
  ingressClassName: nginx
  rules:
    - host: "monitoring.{{ .Values.external_hostname_suffix }}"
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: monitoring-kb-http
                port:
                  name: https
